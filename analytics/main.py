#This script is used to analyse data
#It needs the transcripts generated by string_matching, keywords cleaned file generated by both keywords_database and keywords_factoscope and metadata file generated by xmlExtractor
#It will display bar graphs but can be used to process data as well

import argparse
import json
import matplotlib.pyplot as plt
from src.analytics import Analytics


def main(data_path, keywords_path, metadata_path):
    # Importing the data needed for processing
    print('[-] Importing data')
    with open(data_path, 'r', encoding='UTF-8') as file:
        data = json.load(file)

    with open(keywords_path, 'r', encoding='UTF-8') as file:
        keywords = json.load(file)

    with open(metadata_path, 'r', encoding='UTF-8') as file:
        metadata = json.load(file)

    # Perform analytics on the imported data
    analyser = Analytics(data, keywords, metadata)
    channels, data = analyser.analyse_keywords_per_day()

    # Display a graph based on the analytics
    analyser.display_graph(channels, data)


# Set up the argument parser
parser = argparse.ArgumentParser(description='Generate analytics graphs')
parser.add_argument('--data', help='Path to the data file', required=True)
parser.add_argument('--keywords', help='Path to the keywords file', required=True)
parser.add_argument('--metadata', help='Path to the metadata file', required=True)
args = parser.parse_args()

# Run the main function
if __name__ == "__main__":
    main(args.data, args.keywords, args.metadata)
